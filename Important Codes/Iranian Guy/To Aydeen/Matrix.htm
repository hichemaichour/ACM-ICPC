<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"><head>


<meta http-equiv="content-type" content="text/html; charset=utf-8"><title>C++ code colored by C++2HTML</title>

<meta name="generator" content="C++2HTML by Jasper Bedaux"><!-- To generate your own colored code visit http://www.bedaux.net/cpp2html/ -->

<style type="text/css">
.comment { color: #999999; font-style: italic; }
.pre { color: #000099; }
.string { color: #009900; }
.char { color: #009900; }
.float { color: #996600; }
.int { color: #999900; }
.bool { color: #000000; font-weight: bold; }
.type { color: #FF6633; }
.flow { color: #FF0000; }
.keyword { color: #990000; }
.operator { color: #663300; font-weight: bold; }
</style></head><body>
<pre><span class="keyword">inline</span><span class="type"> bool</span> zero<span class="operator">(</span><span class="type">double</span> s<span class="operator">){</span><span class="flow"> return</span><span class="operator">(</span>abs<span class="operator">(</span>s<span class="operator">) &lt;</span> EPS<span class="operator">);
}</span><span class="keyword">

template</span><span class="operator"> &lt;</span><span class="keyword">class</span> T<span class="operator">&gt;</span><span class="keyword"> struct</span> Matrix<span class="operator">{</span>
  vector<span class="operator">&lt;</span>vector<span class="operator">&lt;</span>T<span class="operator">&gt; &gt;</span> num<span class="operator">;</span><span class="type">
  int</span> n<span class="operator">;</span>
  vector<span class="operator">&lt;</span>T<span class="operator">&gt; &amp;</span><span class="keyword"> operator</span><span class="operator"> [] (</span><span class="type">int</span> s<span class="operator">){</span><span class="flow"> return</span><span class="operator">(</span>num<span class="operator">[</span>s<span class="operator">]);
  }</span>
  Matrix<span class="operator">(</span><span class="type">int</span> n<span class="operator">){</span>
    num<span class="operator">.</span>resize<span class="operator">(</span>n<span class="operator">+</span><span class="int">1</span><span class="operator">);</span><span class="keyword">
    this</span><span class="operator">-&gt;</span>n<span class="operator">=</span>n<span class="operator">;</span><span class="flow">
    for</span><span class="operator"> (</span><span class="type">int</span> i<span class="operator">=</span><span class="int">0</span><span class="operator">;</span>i<span class="operator">&lt;</span>num<span class="operator">.</span>size<span class="operator">();</span>i<span class="operator">++)</span> num<span class="operator">[</span>i<span class="operator">].</span>resize<span class="operator">(</span>n<span class="operator">+</span><span class="int">1</span><span class="operator">);
  }</span>
  T determinant<span class="operator">(){</span>
    vector<span class="operator">&lt;</span>vector<span class="operator">&lt;</span>T<span class="operator">&gt; &gt;</span> x<span class="operator">=</span>num<span class="operator">;</span>
    T ans<span class="operator">=</span><span class="int">1</span><span class="operator">;</span><span class="flow">
    for</span><span class="operator"> (</span><span class="type">int</span> i<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>i<span class="operator">&lt;=</span>n<span class="operator">;</span>i<span class="operator">++){</span><span class="flow">
      for</span><span class="operator"> (</span><span class="type">int</span> j<span class="operator">=</span>i<span class="operator">+</span><span class="int">1</span><span class="operator">;</span>j<span class="operator">&lt;=</span>n<span class="operator">;</span>j<span class="operator">++)</span><span class="flow"> 
	if</span><span class="operator"> (!</span>zero<span class="operator">(</span>x<span class="operator">[</span>j<span class="operator">][</span>i<span class="operator">])){</span>
	  swap<span class="operator">(</span>x<span class="operator">[</span>i<span class="operator">],</span>x<span class="operator">[</span>j<span class="operator">]);</span>
	  ans<span class="operator">*=-</span><span class="int">1</span><span class="operator">;
	}</span><span class="flow">
      if</span><span class="operator"> (</span>zero<span class="operator">(</span>x<span class="operator">[</span>i<span class="operator">][</span>i<span class="operator">]))</span><span class="flow"> return</span><span class="operator">(</span><span class="int">0</span><span class="operator">);</span><span class="flow">
      for</span><span class="operator"> (</span><span class="type">int</span> j<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>j<span class="operator">&lt;=</span>n<span class="operator">;</span>j<span class="operator">++)</span><span class="flow"> if</span><span class="operator"> (</span>j<span class="operator">!=</span>i<span class="operator">){</span>
	T zarib<span class="operator">=</span>x<span class="operator">[</span>j<span class="operator">][</span>i<span class="operator">]/</span>x<span class="operator">[</span>i<span class="operator">][</span>i<span class="operator">];</span><span class="flow">
	for</span><span class="operator"> (</span><span class="type">int</span> k<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>k<span class="operator">&lt;=</span>n<span class="operator">;</span>k<span class="operator">++)</span> x<span class="operator">[</span>j<span class="operator">][</span>k<span class="operator">]-=</span>x<span class="operator">[</span>i<span class="operator">][</span>k<span class="operator">]*</span>zarib<span class="operator">;
      }
    }</span><span class="flow">
    for</span><span class="operator"> (</span><span class="type">int</span> i<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>i<span class="operator">&lt;=</span>n<span class="operator">;</span>i<span class="operator">++)</span> ans<span class="operator">*=</span>x<span class="operator">[</span>i<span class="operator">][</span>i<span class="operator">];</span><span class="flow">
    return</span><span class="operator">(</span>ans<span class="operator">);
  }
};</span><span class="keyword">

template</span><span class="operator"> &lt;</span><span class="keyword">class</span> T<span class="operator">&gt;</span>
Matrix<span class="operator">&lt;</span>T<span class="operator">&gt;</span><span class="keyword"> operator</span><span class="operator"> * (</span><span class="keyword">const</span> Matrix<span class="operator">&lt;</span>T<span class="operator">&gt; &amp;</span>a<span class="operator">,</span><span class="keyword">const</span> Matrix<span class="operator">&lt;</span>T<span class="operator">&gt; &amp;</span>b<span class="operator">){</span>
  Matrix<span class="operator">&lt;</span>T<span class="operator">&gt;</span> ans<span class="operator">(</span>a<span class="operator">.</span>n<span class="operator">);</span>
  assert<span class="operator">(</span>a<span class="operator">.</span>n<span class="operator"> ==</span> b<span class="operator">.</span>n<span class="operator">);</span><span class="flow">
  for</span><span class="operator"> (</span><span class="type">int</span> i<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>i<span class="operator">&lt;=</span>a<span class="operator">.</span>n<span class="operator">;</span>i<span class="operator">++)</span><span class="flow">
    for</span><span class="operator"> (</span><span class="type">int</span> j<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>j<span class="operator">&lt;=</span>b<span class="operator">.</span>n<span class="operator">;</span>j<span class="operator">++)</span><span class="flow">
      for</span><span class="operator"> (</span><span class="type">int</span> k<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>k<span class="operator">&lt;=</span>b<span class="operator">.</span>n<span class="operator">;</span>k<span class="operator">++)</span>
	ans<span class="operator">.</span>num<span class="operator">[</span>i<span class="operator">][</span>j<span class="operator">]=</span>ans<span class="operator">.</span>num<span class="operator">[</span>i<span class="operator">][</span>j<span class="operator">]+</span>a<span class="operator">.</span>num<span class="operator">[</span>i<span class="operator">][</span>k<span class="operator">]*</span>b<span class="operator">.</span>num<span class="operator">[</span>k<span class="operator">][</span>j<span class="operator">];</span><span class="flow">
  return</span><span class="operator">(</span>ans<span class="operator">);
}</span><span class="keyword">

template</span><span class="operator"> &lt;</span><span class="keyword">class</span> T<span class="operator">&gt;</span>
Matrix<span class="operator">&lt;</span>T<span class="operator">&gt;</span> pow<span class="operator">(</span><span class="keyword">const</span> Matrix<span class="operator">&lt;</span>T<span class="operator">&gt; &amp;</span>a<span class="operator">,</span><span class="type">int</span> b<span class="operator">){</span><span class="flow">
  if</span><span class="operator"> (</span>b<span class="operator">==</span><span class="int">0</span><span class="operator">){</span>
    Matrix<span class="operator">&lt;</span>T<span class="operator">&gt;</span> ans<span class="operator">=</span>a<span class="operator">;</span><span class="flow">
    for</span><span class="operator"> (</span><span class="type">int</span> i<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>i<span class="operator">&lt;=</span>ans<span class="operator">.</span>n<span class="operator">;</span>i<span class="operator">++)</span><span class="flow">
      for</span><span class="operator"> (</span><span class="type">int</span> j<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>j<span class="operator">&lt;=</span>ans<span class="operator">.</span>n<span class="operator">;</span>j<span class="operator">++)</span>
	ans<span class="operator">.</span>num<span class="operator">[</span>i<span class="operator">][</span>j<span class="operator">]=</span>i<span class="operator">==</span>j<span class="operator">;</span><span class="flow">
    return</span><span class="operator">(</span>ans<span class="operator">);
  }</span>
  Matrix<span class="operator">&lt;</span>T<span class="operator">&gt;</span> res<span class="operator">=</span>pow<span class="operator">(</span>a<span class="operator">,</span>b<span class="operator">/</span><span class="int">2</span><span class="operator">);</span>
  res<span class="operator">=</span>res<span class="operator">*</span>res<span class="operator">;</span><span class="flow">
  if</span><span class="operator"> (</span>b<span class="operator">*</span><span class="int">2</span><span class="operator">)</span> res<span class="operator">=</span>res<span class="operator">*</span>a<span class="operator">;</span><span class="flow">
  return</span><span class="operator">(</span>res<span class="operator">);
}</span><span class="keyword">

template</span><span class="operator"> &lt;</span><span class="keyword">class</span> T<span class="operator">&gt;</span><span class="keyword"> struct</span> Equation<span class="operator">{</span>
  vector<span class="operator">&lt;</span>T<span class="operator">&gt;</span> answer<span class="operator">,</span>result<span class="operator">;</span>
  vector<span class="operator">&lt;</span>vector<span class="operator">&lt;</span>T<span class="operator">&gt; &gt;</span> num<span class="operator">;</span><span class="type">
  int</span> n<span class="operator">;</span>

  Equation<span class="operator">(</span><span class="type">int</span> s<span class="operator">):</span>n<span class="operator">(</span>s<span class="operator">){</span>
    num<span class="operator">.</span>resize<span class="operator">(</span>n<span class="operator">+</span><span class="int">1</span><span class="operator">);</span><span class="flow">
    for</span><span class="operator"> (</span><span class="type">int</span> i<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>i<span class="operator">&lt;=</span>n<span class="operator">;</span>i<span class="operator">++)</span> num<span class="operator">[</span>i<span class="operator">].</span>resize<span class="operator">(</span>n<span class="operator">+</span><span class="int">1</span><span class="operator">);</span>
    answer<span class="operator">.</span>resize<span class="operator">(</span>n<span class="operator">+</span><span class="int">1</span><span class="operator">);</span>
    result<span class="operator">.</span>resize<span class="operator">(</span>n<span class="operator">+</span><span class="int">1</span><span class="operator">);
  }</span><span class="type">
  
  void</span> solve<span class="operator">(){</span>
    vector<span class="operator">&lt;</span><span class="type">int</span><span class="operator">&gt;</span> index<span class="operator">;</span><span class="flow">
    for</span><span class="operator"> (</span><span class="type">int</span> i<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>i<span class="operator">&lt;=</span>n<span class="operator">;</span>i<span class="operator">++){</span><span class="type">
      int</span> last<span class="operator">=</span>i<span class="operator">;</span><span class="flow">
      for</span><span class="operator"> (</span><span class="type">int</span> j<span class="operator">=</span>i<span class="operator">+</span><span class="int">1</span><span class="operator">;</span>j<span class="operator">&lt;=</span>n<span class="operator">;</span>j<span class="operator">++)</span><span class="flow"> if</span><span class="operator"> (!</span>zero<span class="operator">(</span>num<span class="operator">[</span>j<span class="operator">][</span>i<span class="operator">]))</span> last<span class="operator">=</span>j<span class="operator">;</span><span class="flow">

      for</span><span class="operator"> (</span><span class="type">int</span> j<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>j<span class="operator">&lt;=</span>n<span class="operator">;</span>j<span class="operator">++)</span> swap<span class="operator">(</span>num<span class="operator">[</span>last<span class="operator">][</span>j<span class="operator">],</span>num<span class="operator">[</span>i<span class="operator">][</span>j<span class="operator">]);</span>
      swap<span class="operator">(</span>answer<span class="operator">[</span>last<span class="operator">],</span>answer<span class="operator">[</span>i<span class="operator">]);</span><span class="flow">
      
      if</span><span class="operator"> (!</span>zero<span class="operator">(</span>num<span class="operator">[</span>i<span class="operator">][</span>i<span class="operator">]))</span><span class="flow">
	for</span><span class="operator"> (</span><span class="type">int</span> j<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>j<span class="operator">&lt;=</span>n<span class="operator">;</span>j<span class="operator">++)</span><span class="flow"> if</span><span class="operator"> (</span>j<span class="operator">!=</span>i<span class="operator">){</span>
	  T zarib<span class="operator">=</span>num<span class="operator">[</span>j<span class="operator">][</span>i<span class="operator">]/</span>num<span class="operator">[</span>i<span class="operator">][</span>i<span class="operator">];</span><span class="flow">
	  for</span><span class="operator"> (</span><span class="type">int</span> k<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>k<span class="operator">&lt;=</span>n<span class="operator">;</span>k<span class="operator">++)</span>
	    num<span class="operator">[</span>j<span class="operator">][</span>k<span class="operator">]-=</span>zarib<span class="operator">*</span>num<span class="operator">[</span>i<span class="operator">][</span>k<span class="operator">];</span>
	  answer<span class="operator">[</span>j<span class="operator">]-=</span>zarib<span class="operator">*</span>answer<span class="operator">[</span>i<span class="operator">];
	}
    }</span><span class="flow">
    for</span><span class="operator"> (</span><span class="type">int</span> i<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>i<span class="operator">&lt;=</span>n<span class="operator">;</span>i<span class="operator">++)</span> result<span class="operator">[</span>i<span class="operator">]=</span>answer<span class="operator">[</span>i<span class="operator">]/</span>num<span class="operator">[</span>i<span class="operator">][</span>i<span class="operator">];
  }
};</span>
</pre>

</body></html>