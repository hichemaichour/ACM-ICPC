<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"><head>


<meta http-equiv="content-type" content="text/html; charset=utf-8"><title>C++ code colored by C++2HTML</title>

<meta name="generator" content="C++2HTML by Jasper Bedaux"><!-- To generate your own colored code visit http://www.bedaux.net/cpp2html/ -->

<style type="text/css">
.comment { color: #999999; font-style: italic; }
.pre { color: #000099; }
.string { color: #009900; }
.char { color: #009900; }
.float { color: #996600; }
.int { color: #999900; }
.bool { color: #000000; font-weight: bold; }
.type { color: #FF6633; }
.flow { color: #FF0000; }
.keyword { color: #990000; }
.operator { color: #663300; font-weight: bold; }
</style></head><body>
<pre><span class="keyword">struct</span> dice<span class="operator">{</span><span class="type">
  int</span> top<span class="operator">,</span>button<span class="operator">,</span>front<span class="operator">,</span>back<span class="operator">,</span>left<span class="operator">,</span>right<span class="operator">;</span>
  dice<span class="operator">(){</span>
    top<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>
    button<span class="operator">=</span><span class="int">2</span><span class="operator">;</span>
    front<span class="operator">=</span><span class="int">3</span><span class="operator">;</span>
    back<span class="operator">=</span><span class="int">4</span><span class="operator">;</span>
    left<span class="operator">=</span><span class="int">5</span><span class="operator">;</span>
    right<span class="operator">=</span><span class="int">6</span><span class="operator">;
  }</span>
  dice shift_left<span class="operator">(){</span>
    dice ans<span class="operator">=*</span><span class="keyword">this</span><span class="operator">;</span>
    swap<span class="operator">(</span>ans<span class="operator">.</span>front<span class="operator">,</span>ans<span class="operator">.</span>right<span class="operator">);</span>
    swap<span class="operator">(</span>ans<span class="operator">.</span>right<span class="operator">,</span>ans<span class="operator">.</span>back<span class="operator">);</span>
    swap<span class="operator">(</span>ans<span class="operator">.</span>back<span class="operator">,</span>ans<span class="operator">.</span>left<span class="operator">);</span><span class="flow">
    return</span><span class="operator">(</span>ans<span class="operator">);
  }</span>
  dice shift_top<span class="operator">(){</span>
    dice ans<span class="operator">=*</span><span class="keyword">this</span><span class="operator">;</span>
    swap<span class="operator">(</span>ans<span class="operator">.</span>front<span class="operator">,</span>ans<span class="operator">.</span>button<span class="operator">);</span>
    swap<span class="operator">(</span>ans<span class="operator">.</span>button<span class="operator">,</span>ans<span class="operator">.</span>back<span class="operator">);</span>
    swap<span class="operator">(</span>ans<span class="operator">.</span>back<span class="operator">,</span>ans<span class="operator">.</span>top<span class="operator">);</span><span class="flow">
    return</span><span class="operator">(</span>ans<span class="operator">);
  }</span>
  dice rotate_left<span class="operator">(){</span>
    dice ans<span class="operator">=*</span><span class="keyword">this</span><span class="operator">;</span>
    swap<span class="operator">(</span>ans<span class="operator">.</span>top<span class="operator">,</span>ans<span class="operator">.</span>right<span class="operator">);</span>
    swap<span class="operator">(</span>ans<span class="operator">.</span>right<span class="operator">,</span>ans<span class="operator">.</span>button<span class="operator">);</span>
    swap<span class="operator">(</span>ans<span class="operator">.</span>button<span class="operator">,</span>ans<span class="operator">.</span>left<span class="operator">);</span><span class="flow">
    return</span><span class="operator">(</span>ans<span class="operator">);
  }</span>
  dice shift_right<span class="operator">(){</span><span class="flow">
    return</span><span class="operator">(</span>shift_left<span class="operator">().</span>shift_left<span class="operator">().</span>shift_left<span class="operator">());
  }</span>
  dice shift_button<span class="operator">(){</span><span class="flow">
    return</span><span class="operator">(</span>shift_top<span class="operator">().</span>shift_top<span class="operator">().</span>shift_top<span class="operator">());
  }</span>
  dice rotate_right<span class="operator">(){</span><span class="flow">
    return</span><span class="operator">(</span>rotate_left<span class="operator">().</span>rotate_left<span class="operator">().</span>rotate_left<span class="operator">());
  }
};</span>
</pre>

</body></html>