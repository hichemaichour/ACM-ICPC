<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"><head>


<meta http-equiv="content-type" content="text/html; charset=utf-8"><title>C++ code colored by C++2HTML</title>

<meta name="generator" content="C++2HTML by Jasper Bedaux"><!-- To generate your own colored code visit http://www.bedaux.net/cpp2html/ -->

<style type="text/css">
.comment { color: #999999; font-style: italic; }
.pre { color: #000099; }
.string { color: #009900; }
.char { color: #009900; }
.float { color: #996600; }
.int { color: #999900; }
.bool { color: #000000; font-weight: bold; }
.type { color: #FF6633; }
.flow { color: #FF0000; }
.keyword { color: #990000; }
.operator { color: #663300; font-weight: bold; }
</style></head><body>
<pre><span class="keyword">template</span><span class="operator"> &lt;</span><span class="keyword">class</span> T<span class="operator">&gt;</span><span class="keyword"> 
class</span> Solver<span class="operator">{</span><span class="keyword">
  struct</span> Equation<span class="operator">{</span>
    vector<span class="operator">&lt;</span>T<span class="operator">&gt;</span> answer<span class="operator">,</span>result<span class="operator">;</span>
    vector<span class="operator">&lt;</span>vector<span class="operator">&lt;</span>T<span class="operator">&gt; &gt;</span> num<span class="operator">;</span><span class="type">
    int</span> n<span class="operator">;</span>
    
    Equation<span class="operator">(</span><span class="type">int</span> s<span class="operator">):</span>n<span class="operator">(</span>s<span class="operator">){</span>
      num<span class="operator">.</span>resize<span class="operator">(</span>n<span class="operator">+</span><span class="int">1</span><span class="operator">);</span><span class="flow">
      for</span><span class="operator"> (</span><span class="type">int</span> i<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>i<span class="operator">&lt;=</span>n<span class="operator">;</span>i<span class="operator">++)</span> num<span class="operator">[</span>i<span class="operator">].</span>resize<span class="operator">(</span>n<span class="operator">+</span><span class="int">1</span><span class="operator">);</span>
      answer<span class="operator">.</span>resize<span class="operator">(</span>n<span class="operator">+</span><span class="int">1</span><span class="operator">);</span>
      result<span class="operator">.</span>resize<span class="operator">(</span>n<span class="operator">+</span><span class="int">1</span><span class="operator">);
    }</span><span class="type">
    
    void</span> solve<span class="operator">(){</span>
      vector<span class="operator">&lt;</span><span class="type">int</span><span class="operator">&gt;</span> index<span class="operator">;</span><span class="flow">
      for</span><span class="operator"> (</span><span class="type">int</span> i<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>i<span class="operator">&lt;=</span>n<span class="operator">;</span>i<span class="operator">++){</span><span class="type">
	int</span> last<span class="operator">=</span>i<span class="operator">;</span><span class="flow">
	for</span><span class="operator"> (</span><span class="type">int</span> j<span class="operator">=</span>i<span class="operator">+</span><span class="int">1</span><span class="operator">;</span>j<span class="operator">&lt;=</span>n<span class="operator">;</span>j<span class="operator">++)</span><span class="flow"> if</span><span class="operator"> (!</span>zero<span class="operator">(</span>num<span class="operator">[</span>j<span class="operator">][</span>i<span class="operator">]))</span> last<span class="operator">=</span>j<span class="operator">;</span><span class="flow">
	
	for</span><span class="operator"> (</span><span class="type">int</span> j<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>j<span class="operator">&lt;=</span>n<span class="operator">;</span>j<span class="operator">++)</span> swap<span class="operator">(</span>num<span class="operator">[</span>last<span class="operator">][</span>j<span class="operator">],</span>num<span class="operator">[</span>i<span class="operator">][</span>j<span class="operator">]);</span>
	swap<span class="operator">(</span>answer<span class="operator">[</span>last<span class="operator">],</span>answer<span class="operator">[</span>i<span class="operator">]);</span><span class="flow">
	
	if</span><span class="operator"> (!</span>zero<span class="operator">(</span>num<span class="operator">[</span>i<span class="operator">][</span>i<span class="operator">]))</span><span class="flow">
	  for</span><span class="operator"> (</span><span class="type">int</span> j<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>j<span class="operator">&lt;=</span>n<span class="operator">;</span>j<span class="operator">++)</span><span class="flow"> if</span><span class="operator"> (</span>j<span class="operator">!=</span>i<span class="operator">){</span>
	    T zarib<span class="operator">=</span>num<span class="operator">[</span>j<span class="operator">][</span>i<span class="operator">]/</span>num<span class="operator">[</span>i<span class="operator">][</span>i<span class="operator">];</span><span class="flow">
	    for</span><span class="operator"> (</span><span class="type">int</span> k<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>k<span class="operator">&lt;=</span>n<span class="operator">;</span>k<span class="operator">++)</span>
	      num<span class="operator">[</span>j<span class="operator">][</span>k<span class="operator">]-=</span>zarib<span class="operator">*</span>num<span class="operator">[</span>i<span class="operator">][</span>k<span class="operator">];</span>
	    answer<span class="operator">[</span>j<span class="operator">]-=</span>zarib<span class="operator">*</span>answer<span class="operator">[</span>i<span class="operator">];
	  }
      }</span><span class="flow">
      for</span><span class="operator"> (</span><span class="type">int</span> i<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>i<span class="operator">&lt;=</span>n<span class="operator">;</span>i<span class="operator">++)</span> result<span class="operator">[</span>i<span class="operator">]=</span>answer<span class="operator">[</span>i<span class="operator">]/</span>num<span class="operator">[</span>i<span class="operator">][</span>i<span class="operator">];
    }
  };</span><span class="keyword">

  struct</span> StronglyConnected<span class="operator">{</span><span class="type">
    int</span> n<span class="operator">;</span>
    vector<span class="operator">&lt;</span><span class="type">int</span><span class="operator">&gt;</span> sorted<span class="operator">,</span>Glo<span class="operator">;</span>
    vector<span class="operator">&lt;</span>vector<span class="operator">&lt;</span><span class="type">int</span><span class="operator">&gt; &gt;</span> ans<span class="operator">,</span>e<span class="operator">,</span>re<span class="operator">;</span>
    vector<span class="operator">&lt;</span><span class="type">bool</span><span class="operator">&gt;</span> mark<span class="operator">;</span>
    StronglyConnected<span class="operator">(</span><span class="type">int</span> s<span class="operator">){</span>
      n<span class="operator">=</span>s<span class="operator">;</span>
      mark<span class="operator">.</span>clear<span class="operator">();</span>
      mark<span class="operator">.</span>resize<span class="operator">(</span>n<span class="operator">+</span><span class="int">1</span><span class="operator">);</span>
      e<span class="operator">.</span>clear<span class="operator">();</span> re<span class="operator">.</span>clear<span class="operator">();</span>
      e<span class="operator">.</span>resize<span class="operator">(</span>n<span class="operator">+</span><span class="int">1</span><span class="operator">);</span>
      re<span class="operator">.</span>resize<span class="operator">(</span>n<span class="operator">+</span><span class="int">1</span><span class="operator">);</span>
      sorted<span class="operator">.</span>clear<span class="operator">();</span>  ans<span class="operator">.</span>clear<span class="operator">();
    }</span><span class="keyword">
    inline</span><span class="type"> void</span> dfs<span class="operator">(</span><span class="type">int</span> s<span class="operator">){</span><span class="flow">
      if</span><span class="operator"> (</span>mark<span class="operator">[</span>s<span class="operator">])</span><span class="flow"> return</span><span class="operator">;</span>
      mark<span class="operator">[</span>s<span class="operator">]=</span><span class="bool">true</span><span class="operator">;</span>
      Glo<span class="operator">.</span>push_back<span class="operator">(</span>s<span class="operator">);</span><span class="flow">
      for</span><span class="operator"> (</span><span class="type">int</span> i<span class="operator">=</span><span class="int">0</span><span class="operator">;</span>i<span class="operator">&lt;</span>e<span class="operator">[</span>s<span class="operator">].</span>size<span class="operator">();</span>i<span class="operator">++)</span> dfs<span class="operator">(</span>e<span class="operator">[</span>s<span class="operator">][</span>i<span class="operator">]);</span>
      sorted<span class="operator">.</span>push_back<span class="operator">(</span>s<span class="operator">);
    }</span><span class="keyword">
    inline</span><span class="type"> void</span> push_back<span class="operator">(</span><span class="type">int</span> a<span class="operator">,</span><span class="type">int</span> b<span class="operator">){</span> e<span class="operator">[</span>a<span class="operator">].</span>push_back<span class="operator">(</span>b<span class="operator">);
    }</span>
    vector<span class="operator">&lt;</span>vector<span class="operator">&lt;</span><span class="type">int</span><span class="operator">&gt; &gt;</span> Components<span class="operator">(){</span><span class="flow">
      for</span><span class="operator"> (</span><span class="type">int</span> i<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>i<span class="operator">&lt;=</span>n<span class="operator">;</span>i<span class="operator">++)</span><span class="flow"> if</span><span class="operator"> (!</span>mark<span class="operator">[</span>i<span class="operator">])</span> dfs<span class="operator">(</span>i<span class="operator">);</span>
      
      reverse<span class="operator">(</span>sorted<span class="operator">.</span>begin<span class="operator">(),</span>sorted<span class="operator">.</span>end<span class="operator">());</span><span class="flow">
      for</span><span class="operator"> (</span><span class="type">int</span> i<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>i<span class="operator">&lt;=</span>n<span class="operator">;</span>i<span class="operator">++)</span><span class="flow"> for</span><span class="operator"> (</span><span class="type">int</span> j<span class="operator">=</span><span class="int">0</span><span class="operator">;</span>j<span class="operator">&lt;</span>e<span class="operator">[</span>i<span class="operator">].</span>size<span class="operator">();</span>j<span class="operator">++)</span> re<span class="operator">[</span>e<span class="operator">[</span>i<span class="operator">][</span>j<span class="operator">]].</span>push_back<span class="operator">(</span>i<span class="operator">);</span><span class="flow">
      for</span><span class="operator"> (</span><span class="type">int</span> i<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>i<span class="operator">&lt;=</span>n<span class="operator">;</span>i<span class="operator">++)</span> swap<span class="operator">(</span>e<span class="operator">[</span>i<span class="operator">],</span>re<span class="operator">[</span>i<span class="operator">]);</span>
      
      vector<span class="operator">&lt;</span>vector<span class="operator">&lt;</span><span class="type">int</span><span class="operator">&gt; &gt;</span> ans<span class="operator">;</span>
      fill<span class="operator">(</span>mark<span class="operator">.</span>begin<span class="operator">(),</span>mark<span class="operator">.</span>end<span class="operator">(),</span><span class="bool">false</span><span class="operator">);</span><span class="flow">
      for</span><span class="operator"> (</span><span class="type">int</span> i<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>i<span class="operator">&lt;=</span>n<span class="operator">;</span>i<span class="operator">++)</span><span class="flow"> if</span><span class="operator"> (!</span>mark<span class="operator">[</span>sorted<span class="operator">[</span>i<span class="operator">-</span><span class="int">1</span><span class="operator">]]){</span>
	Glo<span class="operator">.</span>clear<span class="operator">();</span>
	dfs<span class="operator">(</span>sorted<span class="operator">[</span>i<span class="operator">-</span><span class="int">1</span><span class="operator">]);</span>
	ans<span class="operator">.</span>push_back<span class="operator">(</span>Glo<span class="operator">);
      }</span><span class="flow">
      return</span><span class="operator">(</span>ans<span class="operator">);
    }
  };</span>
  vector<span class="operator">&lt;</span>vector<span class="operator">&lt;</span>pair<span class="operator">&lt;</span><span class="type">int</span><span class="operator">,</span>T<span class="operator">&gt; &gt; &gt;</span> e<span class="operator">;</span>
  vector<span class="operator">&lt;</span>T<span class="operator">&gt;</span> added<span class="operator">;</span><span class="type">
  int</span> n<span class="operator">;</span><span class="keyword">
public</span><span class="operator">:</span>
  vector<span class="operator">&lt;</span>T<span class="operator">&gt;</span> result<span class="operator">;</span>
  Solver<span class="operator">(</span><span class="type">int</span> s<span class="operator">){</span>
    n<span class="operator">=</span>s<span class="operator">;</span>
    e<span class="operator">.</span>clear<span class="operator">();</span>
    e<span class="operator">.</span>resize<span class="operator">(</span>n<span class="operator">+</span><span class="int">1</span><span class="operator">);</span>
    added<span class="operator">.</span>resize<span class="operator">(</span>n<span class="operator">+</span><span class="int">1</span><span class="operator">);
  }</span><span class="type">
  void</span> addConstant<span class="operator">(</span><span class="type">int</span> x<span class="operator">,</span>T y<span class="operator">){</span>
    added<span class="operator">[</span>x<span class="operator">]+=</span>y<span class="operator">;
  }</span><span class="type">
  void</span> addVariable<span class="operator">(</span><span class="type">int</span> x<span class="operator">,</span><span class="type">int</span> y<span class="operator">,</span>T z<span class="operator">){</span>
    e<span class="operator">[</span>x<span class="operator">].</span>push_back<span class="operator">(</span>pair<span class="operator">&lt;</span><span class="type">int</span><span class="operator">,</span>T<span class="operator">&gt; (</span>y<span class="operator">,</span>z<span class="operator">));
  }</span><span class="type">
  void</span> solve<span class="operator">(){</span>
    result<span class="operator">.</span>clear<span class="operator">();</span>
    result<span class="operator">.</span>resize<span class="operator">(</span>n<span class="operator">+</span><span class="int">1</span><span class="operator">);</span>
    StronglyConnected mai<span class="operator">(</span>n<span class="operator">);</span><span class="flow">
    for</span><span class="operator"> (</span><span class="type">int</span> i<span class="operator">=</span><span class="int">1</span><span class="operator">;</span>i<span class="operator">&lt;=</span>n<span class="operator">;</span>i<span class="operator">++)</span><span class="flow">
      for</span><span class="operator"> (</span><span class="type">int</span> j<span class="operator">=</span><span class="int">0</span><span class="operator">;</span>j<span class="operator">&lt;</span>e<span class="operator">[</span>i<span class="operator">].</span>size<span class="operator">();</span>j<span class="operator">++)</span>
	mai<span class="operator">.</span>push_back<span class="operator">(</span>i<span class="operator">,</span>e<span class="operator">[</span>i<span class="operator">][</span>j<span class="operator">].</span>first<span class="operator">);</span>
    vector<span class="operator">&lt;</span>vector<span class="operator">&lt;</span><span class="type">int</span><span class="operator">&gt; &gt;</span> component<span class="operator">=</span>mai<span class="operator">.</span>Components<span class="operator">();</span>
    cerr<span class="operator">&lt;&lt;</span>component<span class="operator">.</span>size<span class="operator">()&lt;&lt;</span>endl<span class="operator">;</span>
    vector<span class="operator">&lt;</span><span class="type">int</span><span class="operator">&gt;</span> name<span class="operator">(</span>n<span class="operator">+</span><span class="int">1</span><span class="operator">);</span><span class="flow">    
    for</span><span class="operator"> (</span><span class="type">int</span> i<span class="operator">=</span><span class="int">0</span><span class="operator">;</span>i<span class="operator">&lt;</span>component<span class="operator">.</span>size<span class="operator">();</span>i<span class="operator">++)</span><span class="flow">
      for</span><span class="operator"> (</span><span class="type">int</span> j<span class="operator">=</span><span class="int">0</span><span class="operator">;</span>j<span class="operator">&lt;</span>component<span class="operator">[</span>i<span class="operator">].</span>size<span class="operator">();</span>j<span class="operator">++)</span>
	name<span class="operator">[</span>component<span class="operator">[</span>i<span class="operator">][</span>j<span class="operator">]]=</span>j<span class="operator">+</span><span class="int">1</span><span class="operator">;</span>

    vector<span class="operator">&lt;</span><span class="type">bool</span><span class="operator">&gt;</span> mark<span class="operator">(</span>n<span class="operator">+</span><span class="int">1</span><span class="operator">);</span><span class="flow">
    for</span><span class="operator"> (</span><span class="type">int</span> i<span class="operator">=</span>component<span class="operator">.</span>size<span class="operator">()-</span><span class="int">1</span><span class="operator">;</span>i<span class="operator">&gt;=</span><span class="int">0</span><span class="operator">;</span>i<span class="operator">--){</span>
      Equation mai<span class="operator">(</span>component<span class="operator">[</span>i<span class="operator">].</span>size<span class="operator">());</span><span class="flow">
      for</span><span class="operator"> (</span><span class="type">int</span> j<span class="operator">=</span><span class="int">0</span><span class="operator">;</span>j<span class="operator">&lt;</span>component<span class="operator">[</span>i<span class="operator">].</span>size<span class="operator">();</span>j<span class="operator">++){</span>
	mai<span class="operator">.</span>num<span class="operator">[</span>name<span class="operator">[</span>component<span class="operator">[</span>i<span class="operator">][</span>j<span class="operator">]]][</span>name<span class="operator">[</span>component<span class="operator">[</span>i<span class="operator">][</span>j<span class="operator">]]]=</span><span class="int">1</span><span class="operator">;</span><span class="flow">
	for</span><span class="operator"> (</span><span class="type">int</span> k<span class="operator">=</span><span class="int">0</span><span class="operator">;</span>k<span class="operator">&lt;</span>e<span class="operator">[</span>component<span class="operator">[</span>i<span class="operator">][</span>j<span class="operator">]].</span>size<span class="operator">();</span>k<span class="operator">++)</span><span class="flow">
	  if</span><span class="operator"> (!</span>mark<span class="operator">[</span>e<span class="operator">[</span>component<span class="operator">[</span>i<span class="operator">][</span>j<span class="operator">]][</span>k<span class="operator">].</span>first<span class="operator">])</span>
	    mai<span class="operator">.</span>num<span class="operator">[</span>name<span class="operator">[</span>component<span class="operator">[</span>i<span class="operator">][</span>j<span class="operator">]]][</span>name<span class="operator">[</span>e<span class="operator">[</span>component<span class="operator">[</span>i<span class="operator">][</span>j<span class="operator">]][</span>k<span class="operator">].</span>first<span class="operator">]]-=</span>e<span class="operator">[</span>component<span class="operator">[</span>i<span class="operator">][</span>j<span class="operator">]][</span>k<span class="operator">].</span>second<span class="operator">;</span><span class="flow">
	  else</span>
	    mai<span class="operator">.</span>answer<span class="operator">[</span>name<span class="operator">[</span>component<span class="operator">[</span>i<span class="operator">][</span>j<span class="operator">]]]+=</span>result<span class="operator">[</span>e<span class="operator">[</span>component<span class="operator">[</span>i<span class="operator">][</span>j<span class="operator">]][</span>k<span class="operator">].</span>first<span class="operator">]*</span>e<span class="operator">[</span>component<span class="operator">[</span>i<span class="operator">][</span>j<span class="operator">]][</span>k<span class="operator">].</span>second<span class="operator">;</span>
	mai<span class="operator">.</span>answer<span class="operator">[</span>name<span class="operator">[</span>component<span class="operator">[</span>i<span class="operator">][</span>j<span class="operator">]]]+=</span>added<span class="operator">[</span>component<span class="operator">[</span>i<span class="operator">][</span>j<span class="operator">]];
      }</span>
      mai<span class="operator">.</span>solve<span class="operator">();</span><span class="flow">
      for</span><span class="operator"> (</span><span class="type">int</span> j<span class="operator">=</span><span class="int">0</span><span class="operator">;</span>j<span class="operator">&lt;</span>component<span class="operator">[</span>i<span class="operator">].</span>size<span class="operator">();</span>j<span class="operator">++){</span>
	result<span class="operator">[</span>component<span class="operator">[</span>i<span class="operator">][</span>j<span class="operator">]]=</span>mai<span class="operator">.</span>result<span class="operator">[</span>name<span class="operator">[</span>component<span class="operator">[</span>i<span class="operator">][</span>j<span class="operator">]]];</span>
	mark<span class="operator">[</span>component<span class="operator">[</span>i<span class="operator">][</span>j<span class="operator">]]=</span><span class="bool">true</span><span class="operator">;
      }
    }
  }
};</span>
</pre>

</body></html>